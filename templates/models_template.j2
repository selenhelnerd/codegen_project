{# 
  models_template.j2
  — Burada sırasıyla:
    1) Gerekli import’lar
    2) Metadata ve Base tanımı
    3) Tablolar (Table(...) tanımları)
    4) View’lar (Table(..., info={'is_view': True}) gibi)
    5) Fonksiyon ve Trigger bölümleri (bunu comment veya comment-blok şeklinde ekleyebilirsiniz)
#}

# Auto-generated by generate_models.py
from sqlalchemy import (
    Table, Column, Integer, String, Text, ForeignKey, MetaData, func, DDL
)
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()
metadata = Base.metadata

{% for tbl in tables %}
# ----------------------------------------
# Tablo: {{ tbl.name }}
{% if tbl.comment %}
# Açıklama: {{ tbl.comment }}
{% endif %}
{{ tbl.name }} = Table(
    "{{ tbl.name }}",
    metadata,
{% for col in tbl.columns %}
    Column("{{ col.name }}", {{ col.type }}{% if col.primary_key %}, primary_key=True{% endif %}{% if col.nullable is not none and not col.nullable %}, nullable=False{% endif %}{% if col.default is not none %}, default={{ col.default }}{% endif %}),
{% endfor %}
{% if tbl.foreign_keys %}
{%   for fk in tbl.foreign_keys %}
    # ForeignKey: {{ fk.name }} → {{ fk.target_table }}({{ fk.target_column }})
    Column("{{ fk.name }}", Integer, ForeignKey("{{ fk.target_table }}.{{ fk.target_column }}")),
{%   endfor %}
{% endif %}
)
{% endfor %}


{% if views %}
# ========================================
# View’lar
{% for vw in views %}
# View: {{ vw.name }}
{{ vw.name }} = Table(
    "{{ vw.name }}",
    metadata,
{% for col in vw.columns %}
    Column("{{ col.name }}", {{ col.type }}),
{% endfor %}
    info={"is_view": True}
)
{% endfor %}
{% endif %}


{% if functions %}
# ========================================
# Fonksiyon Tanımları (DDL)
# Aşağıdaki fonksiyonlar doğrudan veritabanında CREATE OR REPLACE ... şeklinde çalıştırılmalıdır
{% for fn in functions %}
# Function: {{ fn.name }}
# === DDL Start ===
"""
{{ fn.ddl }}
"""
# === DDL End ===

{% endfor %}
{% endif %}


{% if triggers %}
# ========================================
# Trigger Tanımları (DDL)
# Aşağıdaki trigger’lar veritabanında CREATE TRIGGER ... şeklinde çalıştırılmalıdır
{% for trg in triggers %}
# Trigger: {{ trg.name }} (Table: {{ trg.table }})
# === DDL Start ===
"""
{{ trg.ddl }}
"""
# === DDL End ===

{% endfor %}
{% endif %}
