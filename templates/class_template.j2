{# ---------------------------------------- #}
{# Auto-generated by generate_models.py      #}
{# ---------------------------------------- #}

from sqlalchemy import Column, Integer, String, Text, DateTime, ForeignKey, Boolean, Float, text
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()

{% macro fix_type(sql_type) -%}
  {%- set t = sql_type.upper() -%}
  {%- if t.startswith('INTEGER') -%} Integer
  {%- elif t.startswith('TEXT') -%} Text
  {%- elif 'VARCHAR' in t -%} String({{ t.split('VARCHAR(')[1].rstrip(')') }})
  {%- elif t.startswith('TIMESTAMP') or t.startswith('TIMESTAMPTZ') -%} DateTime
  {%- elif t.startswith('DATE') -%} DateTime
  {%- elif t.startswith('BOOLEAN') -%} Boolean
  {%- elif t.startswith('NUMERIC') or t.startswith('DECIMAL') -%} Float
  {%- else -%} String   {# Fallback tipi #}
  {%- endif -%}
{%- endmacro %}

{# ---------------------------------------- #}
{% for tbl in tables %}
# ----------------------------------------
class {{ tbl.name.replace('_', ' ').title().replace(' ', '') }}(Base):
    __tablename__ = "{{ tbl.name }}"
{% if tbl.comment %}
    # Comment: {{ tbl.comment }}
{% endif %}

    {# Her sütun için Column(...) kodu #}
    {% for col in tbl.columns %}
        {%- set is_fk = false -%}
        {%- set fk_target = None -%}
        {%- for fk in tbl.foreign_keys %}
            {%- if fk.name == col.name %}
                {%- set is_fk = true -%}
                {%- set fk_target = fk.target_table ~ "." ~ fk.target_column -%}
            {%- endif %}
        {%- endfor %}

        {%- if is_fk %}
    {{ col.name }} = Column(
        {{ fix_type(col.type) }}, ForeignKey("{{ fk_target }}")
        {%- if col.primary_key %}, primary_key=True{% endif %}
        {%- if col.nullable is not none and not col.nullable %}, nullable=False{% endif %}
        {%- if col.default is not none %}, server_default=text({{ col.default }}){% endif %}
    )
        {%- else %}
    {{ col.name }} = Column(
        {{ fix_type(col.type) }}
        {%- if col.primary_key %}, primary_key=True{% endif %}
        {%- if col.nullable is not none and not col.nullable %}, nullable=False{% endif %}
        {%- if col.default is not none %}, server_default=text({{ col.default }}){% endif %}
    )
        {%- endif %}

    {% endfor %}
{% endfor %}


{# ---------------------------------------- #}
{# VIEWS (read‐only autoload) #}
{% if views %}
# ========================================
{% for vw in views %}
# View: {{ vw.name }}
class {{ vw.name.replace('_', ' ').title().replace(' ', '') }}(Base):
    __tablename__ = "{{ vw.name }}"
    __table_args__ = {"autoload": True, "autoload_with": None}
{% endfor %}
{% endif %}


{# ---------------------------------------- #}
{# FONKSİYON ve TRIGGER DDL’LERİ (yorum-blok içinde) #}
{% if functions %}
# ========================================
# Fonksiyon Tanımları (DDL)
{% for fn in functions %}
# Function: {{ fn.name }}
# === DDL Start ===
"""
{{ fn.ddl }}
"""
# === DDL End ===
{% endfor %}
{% endif %}

{% if triggers %}
# ========================================
# Trigger Tanımları (DDL)
{% for trg in triggers %}
# Trigger: {{ trg.name }} (Table: {{ trg.table }})
# === DDL Start ===
"""
{{ trg.ddl }}
"""
# === DDL End ===
{% endfor %}
{% endif %}
